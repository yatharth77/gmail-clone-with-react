[{"/Users/ys/Desktop/Bootcamp2/gmailclone/src/index.js":"1","/Users/ys/Desktop/Bootcamp2/gmailclone/src/App.js":"2","/Users/ys/Desktop/Bootcamp2/gmailclone/src/reportWebVitals.js":"3","/Users/ys/Desktop/Bootcamp2/gmailclone/src/components/Login.js":"4","/Users/ys/Desktop/Bootcamp2/gmailclone/src/components/Logout.js":"5","/Users/ys/Desktop/Bootcamp2/gmailclone/src/utils/refreshToken.js":"6","/Users/ys/Desktop/Bootcamp2/gmailclone/src/utils/googleCredentials.js":"7","/Users/ys/Desktop/Bootcamp2/gmailclone/src/components/Sidebar.js":"8","/Users/ys/Desktop/Bootcamp2/gmailclone/src/components/LoadMessages.js":"9","/Users/ys/Desktop/Bootcamp2/gmailclone/src/utils/apiManager.js":"10","/Users/ys/Desktop/Bootcamp2/gmailclone/src/utils/dbManager.js":"11","/Users/ys/Desktop/Bootcamp2/gmailclone/src/components/Sidebar2.js":"12","/Users/ys/Desktop/Bootcamp2/gmailclone/src/components/PartialSync.js":"13","/Users/ys/Desktop/Bootcamp2/gmailclone/src/components/Login2.js":"14","/Users/ys/Desktop/Bootcamp2/gmailclone/src/store/index.js":"15","/Users/ys/Desktop/Bootcamp2/gmailclone/src/actions/index.js":"16","/Users/ys/Desktop/Bootcamp2/gmailclone/src/constants/action-types.js":"17","/Users/ys/Desktop/Bootcamp2/gmailclone/src/reducers/index.js":"18"},{"size":573,"mtime":1614883429150,"results":"19","hashOfConfig":"20"},{"size":1235,"mtime":1615026531113,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1611820259043,"results":"22","hashOfConfig":"20"},{"size":3057,"mtime":1614081960861,"results":"23","hashOfConfig":"20"},{"size":1146,"mtime":1615026388298,"results":"24","hashOfConfig":"20"},{"size":396,"mtime":1612010717392,"results":"25","hashOfConfig":"20"},{"size":354,"mtime":1612116202395,"results":"26","hashOfConfig":"20"},{"size":1525,"mtime":1615026565954,"results":"27","hashOfConfig":"20"},{"size":1416,"mtime":1615023650035,"results":"28","hashOfConfig":"20"},{"size":1035,"mtime":1612956035425,"results":"29","hashOfConfig":"20"},{"size":227,"mtime":1615022020946,"results":"30","hashOfConfig":"20"},{"size":1739,"mtime":1614158454323,"results":"31","hashOfConfig":"20"},{"size":3395,"mtime":1615024540560,"results":"32","hashOfConfig":"20"},{"size":3623,"mtime":1615026648136,"results":"33","hashOfConfig":"20"},{"size":145,"mtime":1614881240577,"results":"34","hashOfConfig":"20"},{"size":454,"mtime":1615022875634,"results":"35","hashOfConfig":"20"},{"size":193,"mtime":1615022829932,"results":"36","hashOfConfig":"20"},{"size":885,"mtime":1615022857347,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tb0kb5",{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ys/Desktop/Bootcamp2/gmailclone/src/index.js",[],"/Users/ys/Desktop/Bootcamp2/gmailclone/src/App.js",["77"],"/Users/ys/Desktop/Bootcamp2/gmailclone/src/reportWebVitals.js",[],["78","79"],"/Users/ys/Desktop/Bootcamp2/gmailclone/src/components/Login.js",["80"],"import React, { Component } from 'react'\nimport { GoogleLogin } from 'react-google-login'\nimport { refreshTokenSetup } from '../utils/refreshToken'\nimport { CLIENT_ID, SCOPES } from '../utils/googleCredentials'\nimport Dexie from 'dexie'\nimport { ApiManager } from '../utils/apiManager'\nimport { db } from '../utils/dbManager'\n\nclass Login extends Component {\n\n    serachDB = async (dbName, tableName) => {\n        const exist = await Dexie.exists(dbName);\n        if(exist){\n            if(db.table(tableName)) {\n                const details = await db.table(tableName).toArray()\n                return (details && details.length ? details : null);\n            }\n            else{\n                return null;\n            }\n        }\n        else{\n            return null;\n        }    \n    }\n\n    handleResponse = async (response) => {\n        if (!response.hasOwnProperty('accessToken')){\n            return;\n        }\n        this.props.setAccessToken(response.tokenObj.access_token);\n        this.props.setSignedInState({ signedIn: true });\n        const apiManager = new ApiManager(\"me\", this.props.accessToken);\n        const labelData = await this.serachDB(\"flockdev07@gmail\", \"labels\");\n        if(labelData){\n            this.props.setLabels(labelData);\n        }\n        else{\n            apiManager.fetchAPI(\"labels\", \"\", this.props.accessToken).then((labelJson) => {\n                this.props.setLabels(labelJson.labels);\n                labelJson.labels.map(value => \n                    db.labels.put({ ...value })\n                )\n            })\n        }\n\n        const threadData = await this.serachDB(\"flockdev07@gmail\", \"threads\");\n        if(threadData){\n            this.props.setThreadDetails(threadData);\n        }\n        else{\n            apiManager.fetchAPI(\"threads\", \"\").then((threadJson) => {\n                let threadArray = []\n                threadJson.threads.map(value => \n                    apiManager.fetchAPI(\"threads\", value.id).then((threadDetailJson => {\n                        threadArray.push(threadDetailJson);\n                        this.props.setThreadDetails(threadArray);\n                        let unionLabels = [];\n                        threadDetailJson.messages.map(value => {\n                            unionLabels = [...new Set([...unionLabels, ...value.labelIds])]\n                            apiManager.fetchAPI(\"messages\", value.id).then(messageDetailJson => \n                                db.messages.put({ ...messageDetailJson })\n                            )\n                        })\n                        threadDetailJson.labels = unionLabels;\n                        db.threads.put({ ...threadDetailJson });\n                    }))\n                )\n            })\n        }\n        refreshTokenSetup(response);\n    }\n\n    render(){\n        return(\n        <div>\n            <GoogleLogin \n                clientId={CLIENT_ID} \n                scope={SCOPES} \n                onSuccess={this.handleResponse}\n            />\n        </div>\n        )\n    }\n\n}\n\nexport default Login;\n ","/Users/ys/Desktop/Bootcamp2/gmailclone/src/components/Logout.js",[],"/Users/ys/Desktop/Bootcamp2/gmailclone/src/utils/refreshToken.js",[],"/Users/ys/Desktop/Bootcamp2/gmailclone/src/utils/googleCredentials.js",[],"/Users/ys/Desktop/Bootcamp2/gmailclone/src/components/Sidebar.js",["81","82","83","84","85"],"/Users/ys/Desktop/Bootcamp2/gmailclone/src/components/LoadMessages.js",["86","87","88"],"import React, { Component } from 'react'\nimport parse from 'html-react-parser';\nimport '../style/style.css'\nimport { useLiveQuery } from \"dexie-react-hooks\";\nimport store from \"../store/index\"\nimport { db } from '../utils/dbManager'\n\nfunction LoadMessages() {\n    const label = store.getState().label;\n    const threadResult = useLiveQuery(\n        () => db.threads.filter(thread => thread.labels.includes(label)).toArray(),\n        [label]\n    );\n    \n    if(!threadResult) return null;\n\n    return(\n        <div className=\"list-group\">\n            {\n                threadResult.map((thread, threadIndex) => {\n                    const messages = thread.messages;\n                    return (\n                        <div key={threadIndex}>\n                            <a href=\"#\" className=\"list-group-header\">Message Thread {threadIndex+1}</a> \n                            <div className=\"list-group\">\n                            {\n                                messages.map((message, messageIndex) => {\n                                    return (<a href=\"#\" className=\"list-group-item\" key={messageIndex}><p>Message {messageIndex+1}:</p>{parse(message.snippet)}</a>)\n                                })\n                            }\n                            </div>\n                        </div>\n                    )\n                })\n            }\n        </div>\n    )\n\n}\n\nexport default LoadMessages;\n ","/Users/ys/Desktop/Bootcamp2/gmailclone/src/utils/apiManager.js",[],"/Users/ys/Desktop/Bootcamp2/gmailclone/src/utils/dbManager.js",[],"/Users/ys/Desktop/Bootcamp2/gmailclone/src/components/Sidebar2.js",["89"],"/Users/ys/Desktop/Bootcamp2/gmailclone/src/components/PartialSync.js",[],"/Users/ys/Desktop/Bootcamp2/gmailclone/src/components/Login2.js",["90"],"/Users/ys/Desktop/Bootcamp2/gmailclone/src/store/index.js",[],"/Users/ys/Desktop/Bootcamp2/gmailclone/src/actions/index.js",[],"/Users/ys/Desktop/Bootcamp2/gmailclone/src/constants/action-types.js",[],"/Users/ys/Desktop/Bootcamp2/gmailclone/src/reducers/index.js",[],{"ruleId":"91","severity":1,"message":"92","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":25},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":59,"column":61,"nodeType":"101","messageId":"102","endLine":59,"endColumn":63},{"ruleId":"91","severity":1,"message":"103","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":26},{"ruleId":"91","severity":1,"message":"104","line":1,"column":28,"nodeType":"93","messageId":"94","endLine":1,"endColumn":37},{"ruleId":"91","severity":1,"message":"92","line":1,"column":39,"nodeType":"93","messageId":"94","endLine":1,"endColumn":47},{"ruleId":"91","severity":1,"message":"105","line":16,"column":11,"nodeType":"93","messageId":"94","endLine":16,"endColumn":22},{"ruleId":"106","severity":1,"message":"107","line":42,"column":88,"nodeType":"108","endLine":42,"endColumn":91},{"ruleId":"91","severity":1,"message":"103","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":26},{"ruleId":"106","severity":1,"message":"109","line":24,"column":29,"nodeType":"108","endLine":24,"endColumn":71},{"ruleId":"106","severity":1,"message":"109","line":28,"column":45,"nodeType":"108","endLine":28,"endColumn":104},{"ruleId":"106","severity":1,"message":"109","line":52,"column":86,"nodeType":"108","endLine":52,"endColumn":98},{"ruleId":"99","severity":1,"message":"100","line":72,"column":61,"nodeType":"101","messageId":"102","endLine":72,"endColumn":63},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-native-reassign",["110"],"no-negated-in-lhs",["111"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Component' is defined but never used.","'useEffect' is defined but never used.","'addNewLabel' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]