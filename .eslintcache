[{"/Users/ys/Desktop/Bootcamp2/gmailclone/src/index.js":"1","/Users/ys/Desktop/Bootcamp2/gmailclone/src/App.js":"2","/Users/ys/Desktop/Bootcamp2/gmailclone/src/reportWebVitals.js":"3","/Users/ys/Desktop/Bootcamp2/gmailclone/src/components/Login.js":"4","/Users/ys/Desktop/Bootcamp2/gmailclone/src/components/Logout.js":"5","/Users/ys/Desktop/Bootcamp2/gmailclone/src/utils/refreshToken.js":"6","/Users/ys/Desktop/Bootcamp2/gmailclone/src/utils/googleCredentials.js":"7","/Users/ys/Desktop/Bootcamp2/gmailclone/src/components/Sidebar.js":"8","/Users/ys/Desktop/Bootcamp2/gmailclone/src/components/LoadMessages.js":"9","/Users/ys/Desktop/Bootcamp2/gmailclone/src/utils/apiManager.js":"10","/Users/ys/Desktop/Bootcamp2/gmailclone/src/utils/dbManager.js":"11","/Users/ys/Desktop/Bootcamp2/gmailclone/src/components/Sidebar2.js":"12","/Users/ys/Desktop/Bootcamp2/gmailclone/src/components/PartialSync.js":"13","/Users/ys/Desktop/Bootcamp2/gmailclone/src/components/Login2.js":"14"},{"size":500,"mtime":1611820259042,"results":"15","hashOfConfig":"16"},{"size":3231,"mtime":1614765057951,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1611820259043,"results":"18","hashOfConfig":"16"},{"size":3057,"mtime":1614081960861,"results":"19","hashOfConfig":"16"},{"size":600,"mtime":1612127872146,"results":"20","hashOfConfig":"21"},{"size":396,"mtime":1612010717392,"results":"22","hashOfConfig":"16"},{"size":354,"mtime":1612116202395,"results":"23","hashOfConfig":"16"},{"size":1671,"mtime":1614766554057,"results":"24","hashOfConfig":"16"},{"size":1388,"mtime":1614158232887,"results":"25","hashOfConfig":"16"},{"size":1035,"mtime":1612956035425,"results":"26","hashOfConfig":"16"},{"size":246,"mtime":1614752320758,"results":"27","hashOfConfig":"16"},{"size":1739,"mtime":1614158454323,"results":"28","hashOfConfig":"16"},{"size":2080,"mtime":1614797552843,"results":"29","hashOfConfig":"16"},{"size":3905,"mtime":1614762676010,"results":"30","hashOfConfig":"16"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"tb0kb5",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1spm2wr",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ys/Desktop/Bootcamp2/gmailclone/src/index.js",[],["61","62"],"/Users/ys/Desktop/Bootcamp2/gmailclone/src/App.js",[],"/Users/ys/Desktop/Bootcamp2/gmailclone/src/reportWebVitals.js",[],"/Users/ys/Desktop/Bootcamp2/gmailclone/src/components/Login.js",["63"],"import React, { Component } from 'react'\nimport { GoogleLogin } from 'react-google-login'\nimport { refreshTokenSetup } from '../utils/refreshToken'\nimport { CLIENT_ID, SCOPES } from '../utils/googleCredentials'\nimport Dexie from 'dexie'\nimport { ApiManager } from '../utils/apiManager'\nimport { db } from '../utils/dbManager'\n\nclass Login extends Component {\n\n    serachDB = async (dbName, tableName) => {\n        const exist = await Dexie.exists(dbName);\n        if(exist){\n            if(db.table(tableName)) {\n                const details = await db.table(tableName).toArray()\n                return (details && details.length ? details : null);\n            }\n            else{\n                return null;\n            }\n        }\n        else{\n            return null;\n        }    \n    }\n\n    handleResponse = async (response) => {\n        if (!response.hasOwnProperty('accessToken')){\n            return;\n        }\n        this.props.setAccessToken(response.tokenObj.access_token);\n        this.props.setSignedInState({ signedIn: true });\n        const apiManager = new ApiManager(\"me\", this.props.accessToken);\n        const labelData = await this.serachDB(\"flockdev07@gmail\", \"labels\");\n        if(labelData){\n            this.props.setLabels(labelData);\n        }\n        else{\n            apiManager.fetchAPI(\"labels\", \"\", this.props.accessToken).then((labelJson) => {\n                this.props.setLabels(labelJson.labels);\n                labelJson.labels.map(value => \n                    db.labels.put({ ...value })\n                )\n            })\n        }\n\n        const threadData = await this.serachDB(\"flockdev07@gmail\", \"threads\");\n        if(threadData){\n            this.props.setThreadDetails(threadData);\n        }\n        else{\n            apiManager.fetchAPI(\"threads\", \"\").then((threadJson) => {\n                let threadArray = []\n                threadJson.threads.map(value => \n                    apiManager.fetchAPI(\"threads\", value.id).then((threadDetailJson => {\n                        threadArray.push(threadDetailJson);\n                        this.props.setThreadDetails(threadArray);\n                        let unionLabels = [];\n                        threadDetailJson.messages.map(value => {\n                            unionLabels = [...new Set([...unionLabels, ...value.labelIds])]\n                            apiManager.fetchAPI(\"messages\", value.id).then(messageDetailJson => \n                                db.messages.put({ ...messageDetailJson })\n                            )\n                        })\n                        threadDetailJson.labels = unionLabels;\n                        db.threads.put({ ...threadDetailJson });\n                    }))\n                )\n            })\n        }\n        refreshTokenSetup(response);\n    }\n\n    render(){\n        return(\n        <div>\n            <GoogleLogin \n                clientId={CLIENT_ID} \n                scope={SCOPES} \n                onSuccess={this.handleResponse}\n            />\n        </div>\n        )\n    }\n\n}\n\nexport default Login;\n ","/Users/ys/Desktop/Bootcamp2/gmailclone/src/components/Logout.js",["64"],"/Users/ys/Desktop/Bootcamp2/gmailclone/src/utils/refreshToken.js",[],"/Users/ys/Desktop/Bootcamp2/gmailclone/src/utils/googleCredentials.js",[],"/Users/ys/Desktop/Bootcamp2/gmailclone/src/components/Sidebar.js",["65","66","67","68","69"],"/Users/ys/Desktop/Bootcamp2/gmailclone/src/components/LoadMessages.js",["70","71"],"/Users/ys/Desktop/Bootcamp2/gmailclone/src/utils/apiManager.js",[],"/Users/ys/Desktop/Bootcamp2/gmailclone/src/utils/dbManager.js",[],"/Users/ys/Desktop/Bootcamp2/gmailclone/src/components/Sidebar2.js",["72"],"/Users/ys/Desktop/Bootcamp2/gmailclone/src/components/PartialSync.js",[],"/Users/ys/Desktop/Bootcamp2/gmailclone/src/components/Login2.js",["73"],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":59,"column":61,"nodeType":"80","messageId":"81","endLine":59,"endColumn":63},{"ruleId":"82","severity":1,"message":"83","line":5,"column":5,"nodeType":"84","messageId":"85","endLine":7,"endColumn":6},{"ruleId":"86","severity":1,"message":"87","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":26},{"ruleId":"86","severity":1,"message":"90","line":1,"column":28,"nodeType":"88","messageId":"89","endLine":1,"endColumn":37},{"ruleId":"86","severity":1,"message":"91","line":3,"column":8,"nodeType":"88","messageId":"89","endLine":3,"endColumn":13},{"ruleId":"86","severity":1,"message":"92","line":3,"column":17,"nodeType":"88","messageId":"89","endLine":3,"endColumn":26},{"ruleId":"93","severity":1,"message":"94","line":43,"column":88,"nodeType":"95","endLine":43,"endColumn":100},{"ruleId":"93","severity":1,"message":"94","line":16,"column":33,"nodeType":"95","endLine":16,"endColumn":75},{"ruleId":"93","severity":1,"message":"94","line":20,"column":49,"nodeType":"95","endLine":20,"endColumn":108},{"ruleId":"93","severity":1,"message":"94","line":52,"column":86,"nodeType":"95","endLine":52,"endColumn":98},{"ruleId":"78","severity":1,"message":"79","line":81,"column":61,"nodeType":"80","messageId":"81","endLine":81,"endColumn":63},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Dexie' is defined but never used.","'liveQuery' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]